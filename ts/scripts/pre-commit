#!/bin/sh
echo "> Running pre-commit hook..."
set -e
staged_files=$(git diff --cached --name-only --diff-filter=ACM -- 'src/**/*')
js_ts_files=$(echo "$staged_files" | grep -E '\.(js|jsx|ts|tsx|json)$' || true)

if [ -n "$js_ts_files" ]; then
    echo "$js_ts_files" | xargs npx prettier --loglevel warn --write > /dev/null 2>&1
    echo "$js_ts_files" | xargs git add
    echo ">> Running ESLint on staged JS/TS files..."
    echo "$js_ts_files" | xargs npx eslint --quiet > /dev/null 2>&1 || {
        echo "ERROR: ESLint failed"
        exit 1
    }
    
    scss_css_files=$(echo "$staged_files" | grep -E '\.(scss|css)$' || true)
    if [ -n "$scss_css_files" ]; then
        echo ">> Running Stylelint on staged css files..."
        echo "$scss_css_files" | xargs npx stylelint --quiet > /dev/null 2>&1 || {
            echo "ERROR: Stylelint failed" 
            exit 1
        }
    fi
    
    # Build test files list more efficiently
    test_files=$(echo "$js_ts_files" | while read -r file; do
        dir=$(dirname "$file")
        filename=$(basename "$file")
        extension="${filename##*.}"
        filename="${filename%.*}"
        test_file="$dir/__tests__/$filename.test.$extension"
        [ -e "$test_file" ] && echo "$test_file"
    done)
    
    if [ -n "$test_files" ]; then
        echo ">> Running tests on related test files..."
        echo "$test_files" | xargs npm run test -- > /dev/null 2>&1 || {
            echo "ERROR: Tests failed"
            exit 1
        }
    else
        echo ">> WARNING: No related test files found, skipping tests."
    fi
fi
