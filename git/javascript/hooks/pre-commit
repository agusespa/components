#!/bin/sh

echo "╔════════════════════════════════════════════════╗"
echo "║              Running pre-commit hook           ║"
echo "╚════════════════════════════════════════════════╝"

set -e

staged_files=$(git diff --cached --name-only --diff-filter=ACM -- 'module/**/*')

cd ./module

if [ -n "$staged_files" ]; then
    # remove module as it is the root of the typecript project
    staged_module_files=$(echo "$staged_files" | sed 's|^module/||')

    if [ -n "$staged_module_files" ]; then
        npx prettier --loglevel warn --write $staged_module_files
        git add $staged_module_files

        js_ts_files=$(echo "$staged_module_files" | grep -E '\.(js|jsx|ts|tsx)$' || true)
        if [ -n "$js_ts_files" ]; then
            npx eslint --quiet $js_ts_files || (echo "ERROR ESLint failed" && exit 1)
        fi

        scss_css_files=$(echo "$staged_module_files" | grep -E '\.(scss|css)$' || true)
        if [ -n "$scss_css_files" ]; then
            npx stylelint --quiet $scss_css_files || (echo "ERROR Stylelint failed" && exit 1)
        fi

        if [ -n "$js_ts_files" ]; then
            for file in $js_ts_files; do
                dir=$(dirname "$file")
                filename=$(basename "$file")
                extension="${filename##*.}"
                filename="${filename%.*}"
                test_file="$dir/__tests__/$filename.test.$extension"
                if [ -e "$test_file" ]; then
                    npm run test $test_file || (echo "ERROR: Tests failed" && exit 1)
                fi
            done
        fi
    fi
fi
